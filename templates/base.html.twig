<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{% block title %}Welcome!{% endblock %}</title>

    {% block stylesheets %}
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma-calendar@6.1.14/dist/css/bulma-calendar.min.css">
        {{ encore_entry_link_tags('app') }}
    {% endblock %}

    {% block javascripts %}
        {{ encore_entry_script_tags('app') }}
    {% endblock %}
</head>
<body>

{% block header %}
    {{ include('includes/header.html.twig') }}
{% endblock %}

<section class="body">
    {% block body %}{% endblock %}
</section>
{% if hightlights_dates is defined %}
{% for hightlight_date in hightlights_dates %}
    {{ hightlight_date }}
{% endfor %}
{% endif %}

{% block footer %}
    {{ include('includes/footer.html.twig') }}
{% endblock %}

</body>
</html>



{#     BULMA CALENDAR     #}
<script src="https://cdn.jsdelivr.net/npm/bulma-calendar@6.1.14/dist/js/bulma-calendar.min.js"></script>
<script>

    var today  = new Date();
    var yesterday = new Date();
    yesterday.setDate(today.getDate() - 1);
    var highlightsDates = [];

    {% if highlights_dates is defined %}
        let date;
        {% for highlight_date in highlights_dates %}
            date = '{{ highlight_date }}';
            highlightsDates.push(date);
        {% endfor %}
    {% else %}
        highlightsDates = false;
    {% endif %}


    //console.log(today.toLocaleDateString("fr-FR"));
    //console.log(hightlightsDates);

    var defaultOptions = {
        type: 'date',
        displayMode: 'inline',
        color: 'primary',
        showHeader: true,
        isRange: false,
        allowSameDayRange: true,
        lang: '{{ app.request.locale }}',
        startDate: today,
        endDate: undefined,
        minDate: yesterday,
        maxDate: null,
        disabledDates: [],
        disabledWeekDays: undefined,
        highlightedDates: highlightsDates,
        weekStart: 0,
        dateFormat: 'dd/MM/yyyy',
        enableMonthSwitch: false,
        enableYearSwitch: false,
        displayYearsCount: 50,
        todayLabel: 'Aujourd\'hui',
        showClearButton: false,
        showButtons: false,
        showTodayButton: false,
    };


    const calendars = bulmaCalendar.attach('[type="date"]', defaultOptions);

    // Loop on each calendar initialized
    calendars.forEach(calendar => {
        // Add listener to select event
        calendar.on('select', date => {
            //console.log(date);
        });
    });

    // To access to bulmaCalendar instance of an element
    const element = document.querySelector('#my-element');
    if (element) {
        // bulmaCalendar instance is available as element.bulmaCalendar
        element.bulmaCalendar.on('select', datepicker => {
            selectedDate = datepicker.data.value();
            console.log(selectedDate);
            highlightsDates.forEach(function (highlight) {
                if (highlight === selectedDate){
                    console.log('This is an Highlight !');
                }
            })
        });
    }


</script>



