<!doctype html>
<html lang="en" class="has-navbar-fixed-top">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{% block title %}Welcome!{% endblock %}</title>

    {% block stylesheets %}
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma-calendar@6.1.14/dist/css/bulma-calendar.min.css">
        {{ encore_entry_link_tags('app') }}
    {% endblock %}

    {% block javascripts %}
        {{ encore_entry_script_tags('app') }}
    {% endblock %}
</head>
<body>

{% block header %}
    {{ include('includes/header.html.twig') }}
{% endblock %}

<section class="body">
    {% block body %}{% endblock %}
</section>
{% if hightlights_dates is defined %}
{% for hightlight_date in hightlights_dates %}
    {{ hightlight_date }}
{% endfor %}
{% endif %}

{{ include('includes/flash_message.html.twig') }}

{% block footer %}
    {{ include('includes/footer.html.twig') }}
{% endblock %}

</body>
</html>



{#     BULMA CALENDAR     #}
<script src="https://cdn.jsdelivr.net/npm/bulma-calendar@6.1.14/dist/js/bulma-calendar.min.js"></script>
<script>

    var today  = new Date();
    var yesterday = new Date();
    yesterday.setDate(today.getDate() - 1);
    var highlightsDates = [];

    {% if events is defined %}
        let date;
        {% for event in events %}
            date = '{{ event.datetime|date('d/m/Y') }}';
            highlightsDates.push(date);
        {% endfor %}
    {% else %}
        highlightsDates = false;
    {% endif %}


    //console.log(today.toLocaleDateString("fr-FR"));
    //console.log(highlightsDates);

    {% if app.request.get('_route') == 'events_new' %}
    var defaultOptions = {
        type: 'datetime',
        displayMode: 'default',
        color: 'primary',
        showHeader: true,
        isRange: false,
        allowSameDayRange: true,
        lang: '{{ app.request.locale }}',
        startDate: today,
        endDate: undefined,
        minDate: undefined,
        maxDate: null,
        disabledDates: [],
        disabledWeekDays: undefined,
        highlightedDates: highlightsDates,
        weekStart: 0,
        dateFormat: 'dd/MM/yyyy',
        enableMonthSwitch: false,
        enableYearSwitch: false,
        displayYearsCount: 50,
        todayLabel: 'Aujourd\'hui',
        showClearButton: true,
        showButtons: true,
        showTodayButton: true,
    };
    {% else %}
    var defaultOptions = {
        type: 'date',
        displayMode: 'inline',
        color: 'primary',
        showHeader: true,
        isRange: false,
        allowSameDayRange: true,
        lang: '{{ app.request.locale }}',
        startDate: today,
        endDate: undefined,
        minDate: undefined,
        maxDate: null,
        disabledDates: [],
        disabledWeekDays: undefined,
        highlightedDates: highlightsDates,
        weekStart: 0,
        dateFormat: 'dd/MM/yyyy',
        enableMonthSwitch: false,
        enableYearSwitch: false,
        displayYearsCount: 50,
        todayLabel: 'Aujourd\'hui',
        showClearButton: false,
        showButtons: false,
        showTodayButton: false,
    };
    {% endif %}

    const calendars = bulmaCalendar.attach('[type="date"]', defaultOptions);

    // Loop on each calendar initialized
    calendars.forEach(calendar => {
        // Add listener to select event
        calendar.on('select', date => {
            // console.log(date);
        });
    });

    // To access to bulmaCalendar instance of an element

    const agendas = document.querySelectorAll('.bulma-calendar');
    agendas.forEach(function (agenda) {
        if (agenda) {
            // bulmaCalendar instance is available as element.bulmaCalendar
            agenda.bulmaCalendar.on('select', datepicker => {
                selectedDate = datepicker.data.value();
                let highlightsInfos = document.querySelectorAll('.highlight-info');
                highlightsInfos.forEach(highlight => highlight.classList.add('is-hidden'));
                console.log(selectedDate);
                highlightsDates.forEach(function (highlight) {
                    if (highlight === selectedDate){
                        let highlightInfoId = document.getElementById(highlight);
                        highlightInfoId.classList.remove('is-hidden');
                    }
                });
            });
        }
    });





    {#     SCRIPT POUR TOOGLE NAVBAR IS-ACTIVE     #}
    document.addEventListener('DOMContentLoaded', () => {

        // Get all "navbar-burger" elements
        const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

        // Check if there are any navbar burgers
        if ($navbarBurgers.length > 0) {

            // Add a click event on each of them
            $navbarBurgers.forEach( el => {
                el.addEventListener('click', () => {

                    // Get the target from the "data-target" attribute
                    const target = el.dataset.target;
                    const $target = document.getElementById(target);

                    // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
                    el.classList.toggle('is-active');
                    $target.classList.toggle('is-active');

                });
            });
        }

    });
    {######################################}



    {#     SCRIPT POUR TOOGLE NAVBAR IS-ACTIVE     #}
    function toggleAttr(element) {
        element.forEach(function (el) {
            if (el.type === 'password'){
                el.type = 'text';
            }else if(el.type === 'text'){
                el.type = 'password';
            }
        });
    }

    let showPasswordBtn = document.querySelectorAll('.show-password');
    showPasswordBtn.forEach(function (el) {
            el.addEventListener('click', function (){
                if (el.querySelector('i').classList.contains('fa-eye-slash')){
                    el.querySelector('i').classList.replace('fa-eye-slash','fa-eye');
                    el.querySelector('i').classList.add('has-text-dark');
                } else {
                    el.querySelector('i').classList.replace('fa-eye','fa-eye-slash');
                    el.querySelector('i').classList.remove('has-text-dark');
                }

                toggleAttr(document.querySelectorAll('.input-password'))
            })
        }
    )

</script>



