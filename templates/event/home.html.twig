{% extends 'base.html.twig' %}

{% block title %}{% trans %}Events{% endtrans %}{% endblock %}

{% block body %}
    {% for event in events %}
        <div class="modal" id="modalEvent{{ event.id }}">
            <div class="modal-background" onclick="this.parentElement.classList.remove('is-active')"></div>
            <div class="modal-content box has-background-success-light">
                {{ include('event/modal_event_details.html.twig') }}
            </div>
            <button class="modal-close is-large" aria-label="close" onclick="this.parentElement.classList.remove('is-active')"></button>
        </div>
    {% endfor %}
    <section class="container">
            <div class="column has-text-white">
                <h1 class="title has-text-white">{% trans %}Events page{% endtrans %}</h1>
                <p class="has-text-white">
                    {% trans %}Find all the information about the next events{% endtrans %}
                    <br>
                    {% trans %}Dates and times, places and reservation, opt for reminders so you don't miss anything{% endtrans %}
                </p>
            </div>

            <div class="is-flex-tablet is-flex-direction-row">

                {{ include('event/major_event.html.twig') }}

                <div class="column is-one-quarter-desktop is-one-third-tablet">
                    {{ include('includes/calendar.html.twig') }}
                </div>

            </div>

        {% if events|length > 0 %}
            <div class="column">
                <a href="{{ path('events_all') }}" class="button is-success is-light is-fullwidth box-shadow-bulma is-uppercase has-text-weight-bold">{% trans %}See all events{% endtrans %}</a>
            </div>

            <div class="column">
                <!-- Events box for mobile -->
                {#            {% set count_1 = 0 %}#}
                {#            {% for event in events[1:] %}#}
                {#                {% if count_1 < 4 %}#}
                {#                    {{ include('event/event_container_touch.html.twig') }}#}
                {#                {% endif %}#}
                {#                {% set count_1 = count_1 + 1 %}#}
                {#            {% endfor %}#}
                <!-- End Event box for mobile -->
                {% if events|length > 0 %}
                    {{ include('event/carousel_events.html.twig') }}
                {% endif %}

            </div>
        {% endif %}

    </section>
{% endblock %}


{% block javascripts %}
{#     BULMA CALENDAR     #}
<script>

var today  = new Date();
var yesterday = new Date();
yesterday.setDate(today.getDate() - 1);
var highlightsDates = [];

{% if events is defined %}
let date;
{% for event in events %}
date = '{{ event.datetime|date('d/m/Y') }}';
highlightsDates.push(date);
{% endfor %}
{% else %}
highlightsDates = false;
{% endif %}

{% if app.request.get('_route') == 'events_new' %}
var defaultOptions = {
    type: 'datetime',
    displayMode: 'default',
    color: 'primary',
    showHeader: true,
    isRange: false,
    allowSameDayRange: true,
    lang: '{{ app.request.locale }}',
    startDate: today,
    endDate: undefined,
    minDate: undefined,
    maxDate: null,
    disabledDates: [],
    disabledWeekDays: undefined,
    highlightedDates: highlightsDates,
    weekStart: 0,
    dateFormat: 'dd/MM/yyyy',
    enableMonthSwitch: false,
    enableYearSwitch: false,
    displayYearsCount: 50,
    todayLabel: 'Aujourd\'hui',
    showClearButton: true,
    showButtons: true,
    showTodayButton: true,
};
{% else %}
var defaultOptions = {
    type: 'date',
    displayMode: 'inline',
    color: 'success',
    showHeader: true,
    isRange: false,
    allowSameDayRange: true,
    lang: '{{ app.request.locale }}',
    startDate: today,
    endDate: undefined,
    minDate: today.toLocaleDateString('fr-FR'),
    maxDate: null,
    disabledDates: [],
    disabledWeekDays: undefined,
    highlightedDates: highlightsDates,
    weekStart: 0,
    dateFormat: 'dd/MM/yyyy',
    enableMonthSwitch: false,
    enableYearSwitch: false,
    displayYearsCount: 50,
    //todayLabel: {% trans %}'Today'{% endtrans %},
    showClearButton: false,
    showButtons: false,
    showTodayButton: false,
};
{% endif %}

const calendars = bulmaCalendar.attach('[type="date"]', defaultOptions);

// Loop on each calendar initialized
calendars.forEach(calendar => {
    // Add listener to select event
    calendar.on('select', date => {
    });
});

// To access to bulmaCalendar instance of an element

const agendas = document.querySelectorAll('.bulma-calendar');
agendas.forEach(function (agenda) {
    if (agenda) {
        // bulmaCalendar instance is available as element.bulmaCalendar
        agenda.bulmaCalendar.on('select', datepicker => {
            selectedDate = datepicker.data.value();
            let highlightsInfos = document.querySelectorAll('.highlight-info');
            highlightsInfos.forEach(highlight => highlight.classList.add('is-hidden'));
            highlightsDates.forEach(function (highlight) {
                if (highlight === selectedDate){
                    let highlightInfoId = document.getElementById(highlight);
                    highlightInfoId.classList.remove('is-hidden');
                }
            });
        });
    }
});

</script>

{#          BULMA CAROUSEL            #}
    <script>
        //initialize options :

        var options = {
            initialSlide: 0,
            slidesToShow: 1,
            infinite: false,
            loop:true,
            effect: 'fade',
            autoplay: true,
            navigation:true,
            navigationSwipe: true,
            navigationKeys: false,
            pagination: false,
            duration:500,
            autoplaySpeed:2000,
        };

        // Initialize all div with carousel class
        var carousels = bulmaCarousel.attach('.carousel', options);

        // Loop on each carousel initialized
        for(var i = 0; i < carousels.length; i++) {
            // Add listener to  event
            carousels[i].on('before:show', state => {

            });
        }

        // Access to bulmaCarousel instance of an element
        /*
        var element = document.querySelector('#my-element');
        if (element && element.bulmaCarousel) {
            // bulmaCarousel instance is available as element.bulmaCarousel
            element.bulmaCarousel.on('before-show', function(state) {

            });
        }
        */
    </script>
{% endblock %}

